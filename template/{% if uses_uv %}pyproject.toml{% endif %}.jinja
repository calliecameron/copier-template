[project]
name = "{{ project_name_slug }}"
version = "{{ project_version }}"
readme = "README.md"
requires-python = "{% if max_python_version == min_python_version %}=={{ max_python_version }}.*{% else %}>={{ min_python_version }},<{{ max_python_version | increment_python_version }}{% endif %}"
license = "MIT"
license-files = ["LICENSE"]
dependencies = []

[dependency-groups]
dev = [
{% for package, version in python_packages | dictsort %}
  "{{ package }}=={{ version }}",
{% endfor %}
]

[build-system]
requires = ["{{ uv_build_spec }}"]
build-backend = "uv_build"
{% if uses_bump_my_version %}

[tool.bumpversion]
[[tool.bumpversion.files]]
filename = "pyproject.toml"
search = "version = \"{current_version}\""
replace = "version = \"{new_version}\""
{% if is_python_package %}

[[tool.bumpversion.files]]
filename = "src/{{ project_name_slug_underscore }}/__init__.py"
search = "__version__ = \".*\""
regex = true
replace = "__version__ = \"{new_version}\""
{% endif %}
{% endif %}
{% if uses_pytest %}

[tool.coverage.run]
{% if not is_python_package %}
omit = ["tests/*"]
{% endif %}
{% endif %}
{% if uses_mypy %}

[tool.mypy]
explicit_package_bases = {% if is_python_package %}false{% else %}true{% endif +%}
mypy_path = "stubs"
namespace_packages = {% if is_python_package %}false{% else %}true{% endif +%}
pretty = true
python_version = "{{ max_python_version }}"
scripts_are_modules = true
strict = true
{% endif %}
{% if uses_pytest %}

[tool.pytest.ini_options]
addopts = "--strict-markers --suppress-no-test-exit-code --cov{% if is_python_package %}={{ project_name_slug_underscore }}{% endif %} --cov-report=term-missing"
markers = ["slow"]
{% if not is_python_package %}
pythonpath = ["."]
{% endif %}
{% endif %}
{% if uses_ruff %}

[tool.ruff]
namespace-packages = [
  ".template_files",
]
target-version = "py{{ max_python_version | replace('.', '') }}"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  "C90",
  "D1",
  "E741",
  "EM",
  "FIX",
{% if not is_python_package %}
  "INP001",
{% endif %}
  "PLR09",
{% if uses_pytest %}
  "PT011",
{% endif %}
  "PTH",
  "PYI025",
  "S603",
  "S607",
  "T20",
  "TD",
  "TRY003",
  "TRY301",
]
{% endif %}
{% if uses_tombi %}

[tool.tombi]
{% endif %}
{% if uses_typos %}

[tool.typos]
files.extend-exclude = [
{% if uses_copier %}
  "/{{ _copier_conf.answers_file }}",
{% endif %}
]
default.extend-ignore-re = [
  "(?Rm)^.*(#|//)\\s*spellchecker: *disable-line$",
  "(?s)(#|//)\\s*spellchecker:* off.*?\\n\\s*(#|//)\\s*spellchecker:* on",
  "(#|//)\\s*spellchecker:* disable-next-line\\n.*",
]
{% endif %}

[tool.uv]
package = {% if is_python_package %}true{% else %}false{% endif +%}
