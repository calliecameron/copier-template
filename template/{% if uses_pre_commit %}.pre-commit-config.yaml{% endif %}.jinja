default_stages:
  - pre-commit
  - pre-merge-commit
default_install_hook_types:
  - commit-msg
  - pre-commit
  - pre-merge-commit
repos:
{% if uses_uv %}
  - repo: https://github.com/astral-sh/uv-pre-commit
    rev: 0.8.17
    hooks:
      - id: uv-lock
        name: "uv: sync"
{% endif %}
{% if uses_npm %}
  - repo: local
    hooks:
      - id: npm-lock
        name: "npm: sync"
        language: system
        entry: bash -c 'source "${NVM_DIR}/nvm.sh" && nvm exec --silent npm install'
        files: "^(package\\.json|package-lock\\.json)$"
        pass_filenames: false
{% endif %}
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v6.0.0
    hooks:
      - id: forbid-submodules
        name: "general: forbid submodules"
      - id: check-added-large-files
        name: "general: check for added large files"
      - id: check-case-conflict
        name: "general: check for filename case conflicts"
      - id: check-illegal-windows-names
        name: "general: check for illegal windows filenames"
      - id: check-symlinks
        name: "general: check for broken symlinks"
      - id: destroyed-symlinks
        name: "general: check for destroyed symlinks"
      - id: check-executables-have-shebangs
        name: "general: check that executables have shebangs"
      - id: check-shebang-scripts-are-executable
        name: "general: check that files with shebangs are executable"
      - id: fix-byte-order-marker
        name: "general: check files don't have utf-8 byte order markers"
      - id: mixed-line-ending
        name: "general: check line endings are correct"
        args:
          - --fix=lf
      - id: end-of-file-fixer
        name: "general: check files end with a newline"
      - id: trailing-whitespace
        name: "general: check files don't have trailing whitespace"
      - id: check-merge-conflict
        name: "general: check for files with merge conflicts"
{% if uses_copier %}
        args:
          - --assume-in-merge
{% endif %}
      - id: check-vcs-permalinks
        name: "general: check vcs website links are permalinks"
{% if uses_copier %}
  - repo: local
    hooks:
      - id: copier-forbidden-files
        name: "general: check for copier conflict files"
        entry: found copier update rejection files; review and remove them before merging
        language: fail
        files: "\\.rej$"
{% endif %}
{% if uses_prettier %}
  - repo: local
    hooks:
      - id: prettier
        name: "general: prettier"
        language: system
        entry: bash -c 'source "${NVM_DIR}/nvm.sh" && nvm exec --silent npx prettier --write --ignore-unknown "${@}"' --
        types: [text]
{% endif %}
{% if uses_shellcheck %}
  - repo: local
    hooks:
      - id: shellcheck
        name: "shell: lint"
        language: system
        entry: uv run shellcheck
        types: [shell]
        exclude_types: [zsh]
        require_serial: true
{% endif %}
{% if uses_shfmt %}
  - repo: https://github.com/scop/pre-commit-shfmt
    rev: v3.12.0-2
    hooks:
      - id: shfmt
        name: "shell: format"
{% endif %}
{% if uses_ruff %}
  - repo: local
    hooks:
      - id: ruff-check
        name: "python: lint"
        language: system
        entry: uv run ruff check --force-exclude --fix
        types_or: [python, pyi]
        require_serial: true
      - id: ruff-format
        name: "python: format"
        language: system
        entry: uv run ruff format --force-exclude
        types_or: [python, pyi]
        require_serial: true
{% endif %}
{% if uses_markdownlint %}
  - repo: local
    hooks:
      - id: markdownlint
        name: "markdown: lint"
        language: system
        entry: bash -c 'source "${NVM_DIR}/nvm.sh" && nvm exec --silent npx markdownlint-cli2 --fix "${@}"' --
        types: [markdown]
{% endif %}
{% if uses_tombi %}
  - repo: local
    hooks:
      - id: tombi-lint
        name: "toml: lint"
        language: system
        entry: uv run tombi lint
        types: [toml]
      - id: tombi-format
        name: "toml: format"
        language: system
        entry: uv run tombi format
        types: [toml]
{% endif %}
{% if uses_typos %}
  - repo: local
    hooks:
      - id: typos
        name: "general: spellcheck"
        language: system
        entry: uv run typos --write-changes --force-exclude
        types: [text]
{% endif %}
{% if uses_gitleaks %}
  - repo: https://github.com/gitleaks/gitleaks
    rev: v8.28.0
    hooks:
      - id: gitleaks
        name: "general: check for committed secrets"
{% endif %}
{% if uses_gitlint %}
  - repo: local
    hooks:
      - id: gitlint
        name: "general: check commit message"
        language: system
        entry: uv run gitlint --staged --msg-filename
        stages: [commit-msg]
{% endif %}
